{"version":3,"file":"bootbox.js","sources":["../src/locales/ar.ts","../src/locales/az.ts","../src/locales/bg_BG.ts","../src/locales/cs.ts","../src/locales/da.ts","../src/locales/de.ts","../src/locales/el.ts","../src/locales/en.ts","../src/locales/es.ts","../src/locales/et.ts","../src/locales/eu.ts","../src/locales/fa.ts","../src/locales/fi.ts","../src/locales/fr.ts","../src/locales/he.ts","../src/locales/hr.ts","../src/locales/hu.ts","../src/locales/id.ts","../src/locales/it.ts","../src/locales/ja.ts","../src/locales/ka.ts","../src/locales/ko.ts","../src/locales/lt.ts","../src/locales/lv.ts","../src/locales/nl.ts","../src/locales/no.ts","../src/locales/pl.ts","../src/locales/pt.ts","../src/locales/pt_BR.ts","../src/locales/ru.ts","../src/locales/sk.ts","../src/locales/sl.ts","../src/locales/sq.ts","../src/locales/sv.ts","../src/locales/sw.ts","../src/locales/ta.ts","../src/locales/th.ts","../src/locales/tr.ts","../src/locales/uk.ts","../src/locales/vi.ts","../src/locales/zh_CN.ts","../src/locales/zh_TW.ts","../src/defaults.ts","../src/lib/utils.ts","../src/bootbox.ts"],"sourcesContent":["import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Arabic\r\n// author : Emad Omar\r\nconst ar = {\r\n    OK: 'موافق',\r\n    CANCEL: 'الغاء',\r\n    CONFIRM: 'تأكيد'\r\n} satisfies Locale\r\n\r\nexport default ar;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Azerbaijani\r\n// author : Valentin Belousov\r\nconst az = {\r\n    OK: 'OK',\r\n    CANCEL: 'İmtina et',\r\n    CONFIRM: 'Təsdiq et'\r\n} satisfies Locale\r\n\r\nexport default az;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Bulgarian\r\n// author :  mraiur\r\nconst bgBG = {\r\n    OK      : 'Ок',\r\n    CANCEL  : 'Отказ',\r\n    CONFIRM : 'Потвърждавам'\r\n} satisfies Locale\r\n\r\nexport default bgBG;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Czech\r\n// author : Lukáš Fryč\r\nconst cs = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Zrušit',\r\n    CONFIRM : 'Potvrdit'\r\n} satisfies Locale\r\n\r\nexport default cs;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Danish\r\n// author : Frederik Alkærsig\r\nconst da = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Annuller',\r\n    CONFIRM : 'Accepter'\r\n} satisfies Locale\r\n\r\nexport default da;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : German\r\n// author : Nick Payne\r\n\r\n\r\nconst de = {\r\n\tOK      : 'OK',\r\n    CANCEL  : 'Abbrechen',\r\n    CONFIRM : 'Akzeptieren'\r\n} satisfies Locale\r\n\r\nexport default de;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Greek\r\n// author : Tolis Emmanouilidis\r\nconst el = {\r\n    OK      : 'Εντάξει',\r\n    CANCEL  : 'Ακύρωση',\r\n    CONFIRM : 'Επιβεβαίωση'\r\n} satisfies Locale\r\n\r\nexport default el;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : English\r\n// author : Nick Payne\r\n\r\nconst en = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Cancel',\r\n    CONFIRM : 'OK'\r\n} satisfies Locale\r\n\r\nexport default en;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Spanish\r\n// author : Ian Leckey\r\nconst es = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Cancelar',\r\n    CONFIRM : 'Aceptar'\r\n} satisfies Locale\r\n\r\nexport default es;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Estonian\r\n// author : Pavel Krõlov\r\nconst et = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Katkesta',\r\n    CONFIRM : 'OK'\r\n} satisfies Locale\r\n\r\nexport default et;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Basque\r\n// author : Iker Ibarguren\r\nconst eu = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Ezeztatu',\r\n    CONFIRM : 'Onartu'\r\n} satisfies Locale\r\n\r\nexport default eu;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Persian\r\n// author : Touhid Arastu\r\nconst fa = {\r\n    OK      : 'قبول',\r\n    CANCEL  : 'لغو',\r\n    CONFIRM : 'تایید'\r\n} satisfies Locale\r\n\r\nexport default fa;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Finnish\r\n// author : Nick Payne\r\nconst fi = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Peruuta',\r\n    CONFIRM : 'OK'\r\n} satisfies Locale\r\n\r\nexport default fi;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : French\r\n// author : Nick Payne, Sebastien Andary\r\nconst fr = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Annuler',\r\n    CONFIRM : 'Confirmer'\r\n} satisfies Locale\r\n\r\nexport default fr;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Hebrew\r\n// author : Chen Alon\r\nconst he = {\r\n    OK      : 'אישור',\r\n    CANCEL  : 'ביטול',\r\n    CONFIRM : 'אישור'\r\n} satisfies Locale\r\n\r\nexport default he;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Croatian\r\n// author : Mario Bašić\r\nconst hr = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Odustani',\r\n    CONFIRM : 'Potvrdi'\r\n} satisfies Locale\r\n\r\nexport default hr","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Hungarian\r\n// author : Márk Sági-Kazár\r\nconst hu = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Mégsem',\r\n    CONFIRM : 'Megerősít'\r\n} satisfies Locale\r\n\r\nexport default hu;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Indonesian\r\n// author : Budi Irawan\r\nconst id = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Batal',\r\n    CONFIRM : 'OK'\r\n} satisfies Locale\r\n\r\nexport default id;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Italian\r\n// author : Mauro\r\nconst it = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Annulla',\r\n    CONFIRM : 'Conferma'\r\n} satisfies Locale\r\n\r\nexport default it;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Japanese\r\n// author : ms183\r\nconst ja = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'キャンセル',\r\n    CONFIRM : 'OK'\r\n} satisfies Locale\r\n\r\nexport default ja;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Georgian\r\n// author : Avtandil Kikabidze aka LONGMAN (@akalongman)\r\nconst ka = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'გაუქმება',\r\n    CONFIRM : 'დადასტურება'\r\n} satisfies Locale\r\n\r\nexport default ka;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Korean\r\n// author : rigning\r\nconst ko = {\r\n    OK: 'OK',\r\n    CANCEL: '취소',\r\n    CONFIRM: '확인'\r\n} satisfies Locale\r\n\r\nexport default ko;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Lithuanian\r\n// author : Tomas\r\nconst lt = {\r\n    OK      : 'Gerai',\r\n    CANCEL  : 'Atšaukti',\r\n    CONFIRM : 'Patvirtinti'\r\n} satisfies Locale\r\n\r\nexport default lt;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Latvian\r\n// author : Dmitry Bogatykh, Lauris BH\r\nconst lv = {\r\n    OK      : 'Labi',\r\n    CANCEL  : 'Atcelt',\r\n    CONFIRM : 'Apstiprināt'\r\n} satisfies Locale\r\n\r\nexport default lv;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Dutch\r\n// author : Bas ter Vrugt\r\nconst nl = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Annuleren',\r\n    CONFIRM : 'Accepteren'\r\n} satisfies Locale\r\n\r\nexport default nl;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Norwegian\r\n// author : Nils Magnus Englund\r\nconst no = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Avbryt',\r\n    CONFIRM : 'OK'\r\n} satisfies Locale\r\n\r\nexport default no;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Polish\r\n// author : Szczepan Cieślik\r\nconst pl = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Anuluj',\r\n    CONFIRM : 'Potwierdź'\r\n} satisfies Locale\r\n\r\nexport default pl;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Portuguese\r\n// author : Cláudio Medina\r\nconst pt = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Cancelar',\r\n    CONFIRM : 'Confirmar'\r\n} satisfies Locale\r\n\r\nexport default pt;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Portuguese (Brasil)\r\n// author : Nick Payne\r\nconst ptBR = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Cancelar',\r\n    CONFIRM : 'Sim'\r\n} satisfies Locale\r\n\r\nexport default ptBR;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Russian\r\n// author : ionian-wind\r\nconst ru = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Отмена',\r\n    CONFIRM : 'Применить'\r\n} satisfies Locale\r\n\r\nexport default ru;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Slovak\r\n// author : Stano Paška\r\nconst sk = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Zrušiť',\r\n    CONFIRM : 'Potvrdiť'\r\n} satisfies Locale\r\n\r\nexport default sk;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Slovenian\r\n// author : @metalcamp\r\nconst sl = {\r\n    OK : 'OK',\r\n    CANCEL : 'Prekliči',\r\n    CONFIRM : 'Potrdi'\r\n} satisfies Locale\r\n\r\nexport default sl;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Albanian\r\n// author : Knut Hühne\r\nconst sq = {\r\n    OK : 'OK',\r\n    CANCEL : 'Anulo',\r\n    CONFIRM : 'Prano'\r\n} satisfies Locale\r\n\r\nexport default sq;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Swedish\r\n// author : Mattias Reichel\r\nconst sv = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Avbryt',\r\n    CONFIRM : 'OK'\r\n} satisfies Locale\r\n\r\nexport default sv;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Swahili\r\n// author : Timothy Anyona\r\nconst sw = {\r\n    OK      : 'Sawa',\r\n    CANCEL  : 'Ghairi',\r\n    CONFIRM : 'Thibitisha'\r\n} satisfies Locale\r\n\r\nexport default sw;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Tamil\r\n// author : Kolappan Nathan\r\nconst ta = {\r\n    OK      : 'சரி',\r\n    CANCEL  : 'ரத்து செய்',\r\n    CONFIRM : 'உறுதி செய்'\r\n} satisfies Locale\r\n\r\nexport default ta;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Thai\r\n// author : Ishmael๛\r\nconst th = {\r\n    OK      : 'ตกลง',\r\n    CANCEL  : 'ยกเลิก',\r\n    CONFIRM : 'ยืนยัน'\r\n} satisfies Locale\r\n\r\nexport default th;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Turkish\r\n// author : Enes Karaca\r\nconst tr = {\r\n    OK      : 'Tamam',\r\n    CANCEL  : 'İptal',\r\n    CONFIRM : 'Onayla'\r\n} satisfies Locale\r\n\r\nexport default tr;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Ukrainian\r\n// author : OlehBoiko\r\nconst uk = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Відміна',\r\n    CONFIRM : 'Прийняти'\r\n} satisfies Locale\r\n\r\nexport default uk;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Vietnamese\r\n// author :  Anh Tu Nguyen\r\nconst vi = {\r\n    OK      : 'OK',\r\n    CANCEL  : 'Hủy bỏ',\r\n    CONFIRM : 'Xác nhận'\r\n} satisfies Locale\r\n\r\nexport default vi;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Chinese (China / People's Republic of China)\r\n// author : Nick Payne\r\nconst zhCN = {\r\n    OK      : 'OK',\r\n    CANCEL  : '取消',\r\n    CONFIRM : '确认'\r\n} satisfies Locale\r\n\r\nexport default zhCN;","import { Locale } from \"../interfaces/locale\"\r\n\r\n// locale : Chinese (Taiwan / Republic of China)\r\n// author : Nick Payne\r\nconst zhTW = {\r\n    OK      : 'OK',\r\n    CANCEL  : '取消',\r\n    CONFIRM : '確認'\r\n} satisfies Locale\r\n\r\nexport default zhTW;","import BootboxDefaults from \"./interfaces/bootboxDefaults\";\r\nimport { Translations } from \"./interfaces/locale.ts\";\r\nimport { Templates } from \"./interfaces/templates\";\r\n\r\n// locales\r\nimport ar from './locales/ar.ts'; \r\nimport az from './locales/az.ts'; \r\nimport bgBG from './locales/bg_BG.ts'; \r\nimport cs from './locales/cs.ts'; \r\nimport da from './locales/da.ts'; \r\nimport de from './locales/de.ts'; \r\nimport el from './locales/el.ts'; \r\nimport en from './locales/en.ts'; \r\nimport es from './locales/es.ts'; \r\nimport et from './locales/et.ts'; \r\nimport eu from './locales/eu.ts'; \r\nimport fa from './locales/fa.ts'; \r\nimport fi from './locales/fi.ts'; \r\nimport fr from './locales/fr.ts'; \r\nimport he from './locales/he.ts'; \r\nimport hr from './locales/hr.ts'; \r\nimport hu from './locales/hu.ts'; \r\nimport id from './locales/id.ts'; \r\nimport it from './locales/it.ts'; \r\nimport ja from './locales/ja.ts'; \r\nimport ka from './locales/ka.ts'; \r\nimport ko from './locales/ko.ts'; \r\nimport lt from './locales/lt.ts'; \r\nimport lv from './locales/lv.ts'; \r\nimport nl from './locales/nl.ts'; \r\nimport no from './locales/no.ts'; \r\nimport pl from './locales/pl.ts'; \r\nimport pt from './locales/pt.ts'; \r\nimport ptBR from './locales/pt_BR.ts'; \r\nimport ru from './locales/ru.ts'; \r\nimport sk from './locales/sk.ts'; \r\nimport sl from './locales/sl.ts'; \r\nimport sq from './locales/sq.ts'; \r\nimport sv from './locales/sv.ts'; \r\nimport sw from './locales/sw.ts'; \r\nimport ta from './locales/ta.ts'; \r\nimport th from './locales/th.ts'; \r\nimport tr from './locales/tr.ts'; \r\nimport uk from './locales/uk.ts'; \r\nimport vi from './locales/vi.ts'; \r\nimport zhCN from './locales/zh_CN.ts'; \r\nimport zhTW from './locales/zh_TW.ts';\r\n\r\nexport const DEFAULT_VERSION : string = '6.0.6';\r\n\r\nexport const DEFAULT_LOCALES: Translations = {\r\n\tar,\r\n\taz,\r\n\tbgBG,\r\n\tcs,\r\n\tda,\r\n\tde,\r\n\tel,\r\n\ten,\r\n\tes,\r\n\tet,\r\n\teu,\r\n\tfa,\r\n\tfi,\r\n\tfr,\r\n\the,\r\n\thr,\r\n\thu,\r\n\tid,\r\n\tit,\r\n\tja,\r\n\tka,\r\n\tko,\r\n\tlt,\r\n\tlv,\r\n\tnl,\r\n\tno,\r\n\tpl,\r\n\tpt,\r\n\tptBR,\r\n\tru,\r\n\tsk,\r\n\tsl,\r\n\tsq,\r\n\tsv,\r\n\tsw,\r\n\tta,\r\n\tth,\r\n\ttr,\r\n\tuk,\r\n\tvi,\r\n\tzhCN,\r\n\tzhTW,\r\n} as const;\r\n\r\n\r\nexport const DEFAULT_TEMPLATES: Templates = {\r\n\tdialog:\r\n\t\t'<div class=\"bootbox modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\"><div class=\"modal-dialog\"><div class=\"modal-content\"><div class=\"modal-body\"><div class=\"bootbox-body\"></div></div></div></div></div>',\r\n\theader: '<div class=\"modal-header\"><h5 class=\"modal-title\"></h5></div>',\r\n\tfooter: '<div class=\"modal-footer\"></div>',\r\n\tcloseButton:\r\n\t\t'<button type=\"button\" class=\"bootbox-close-button close btn-close\" aria-label=\"Close\"></button>',\r\n\tform: '<form class=\"bootbox-form\"></form>',\r\n\tbutton: '<button type=\"button\" class=\"btn\"></button>',\r\n\toption: '<option value=\"\"></option>',\r\n\tpromptMessage: '<div class=\"bootbox-prompt-message\"></div>',\r\n\tinputs: {\r\n\t\ttext: '<input class=\"bootbox-input bootbox-input-text form-control\" autocomplete=\"off\" type=\"text\" />',\r\n\t\ttextarea: '<textarea class=\"bootbox-input bootbox-input-textarea form-control\"></textarea>',\r\n\t\temail:\r\n\t\t\t'<input class=\"bootbox-input bootbox-input-email form-control\" autocomplete=\"off\" type=\"email\" />',\r\n\t\tselect: '<select class=\"bootbox-input bootbox-input-select form-select\"></select>',\r\n\t\tcheckbox:\r\n\t\t\t'<div class=\"form-check checkbox\"><label class=\"form-check-label\"><input class=\"form-check-input bootbox-input bootbox-input-checkbox\" type=\"checkbox\" /></label></div>',\r\n\t\tradio:\r\n\t\t\t'<div class=\"form-check radio\"><label class=\"form-check-label\"><input class=\"form-check-input bootbox-input bootbox-input-radio\" type=\"radio\" name=\"bootbox-radio\" /></label></div>',\r\n\t\tdate: '<input class=\"bootbox-input bootbox-input-date form-control\" autocomplete=\"off\" type=\"date\" />',\r\n\t\ttime: '<input class=\"bootbox-input bootbox-input-time form-control\" autocomplete=\"off\" type=\"time\" />',\r\n\t\tnumber:\r\n\t\t\t'<input class=\"bootbox-input bootbox-input-number form-control\" autocomplete=\"off\" type=\"number\" />',\r\n\t\tpassword:\r\n\t\t\t'<input class=\"bootbox-input bootbox-input-password form-control\" autocomplete=\"off\" type=\"password\" />',\r\n\t\trange:\r\n\t\t\t'<input class=\"bootbox-input bootbox-input-range form-control-range\" autocomplete=\"off\" type=\"range\" />'\r\n\t}\r\n} as const;\r\n\r\nexport const DEFAULT_OPTIONS: BootboxDefaults = {\r\n    locale: 'en',\r\n    backdrop: 'static',\r\n    animate: true,\r\n    className: null,\r\n    closeButton: true,\r\n    show: true,\r\n    container: 'body',\r\n    value: '',\r\n    inputType: 'text',\r\n    errorMessage: null,\r\n    swapButtonOrder: false,\r\n    centerVertical: false,\r\n    multiple: false,\r\n    scrollable: false,\r\n    reusable: false,\r\n    relatedTarget: null,\r\n    size: null,\r\n    id: null\r\n} as const;","export function timeIsValid(value: string): boolean {\r\n    return /([01][0-9]|2[0-3]):[0-5][0-9]?:[0-5][0-9]/.test(value);\r\n}\r\n\r\nexport function dateIsValid(value: string): boolean {\r\n    return /(\\d{4})-(\\d{2})-(\\d{2})/.test(value);\r\n}\r\nexport function trigger(el: HTMLElement, eventType: string | Event): void {\r\n\tif (typeof eventType === 'string' && typeof (el as any)[eventType] === 'function') {\r\n\t\t(el as any)[eventType]();\r\n\t} else {\r\n\t\tconst event =\r\n\t\t\ttypeof eventType === 'string' ? new Event(eventType, { bubbles: true }) : eventType;\r\n\t\tel.dispatchEvent(event);\r\n\t}\r\n}","import * as bootstrap from 'bootstrap';\r\nimport { Locale } from './interfaces/locale.ts';\r\nimport Options from './interfaces/Options.ts';\r\nimport Buttons, { Button } from './interfaces/button.ts';\r\nimport { InputGroup } from './interfaces/inputGroup.ts';\r\nimport Callback from './interfaces/callback.ts';\r\nimport { DEFAULT_LOCALES, DEFAULT_OPTIONS, DEFAULT_TEMPLATES, DEFAULT_VERSION } from './defaults.ts';\r\nimport { dateIsValid, timeIsValid, trigger } from './lib/utils.ts';\r\nimport { CustomProperties } from './types/customProperties.ts';\r\n\r\nconst VERSION = DEFAULT_VERSION;\r\nconst locales = DEFAULT_LOCALES;\r\nconst templates = DEFAULT_TEMPLATES;\r\nconst defaults = DEFAULT_OPTIONS;\r\n\r\n// PUBLIC FUNCTIONS\r\n// *************************************************************************************************************\r\n\r\n/**\r\n * Return specific locale\r\n * @param {string} [languageCode]\r\n * @returns {(Locale)} a single locale object.\r\n */\r\nfunction getLocale(languageCode: string): Locale {\r\n\treturn locales[languageCode];\r\n}\r\n\r\n/**\r\n\t\t * Register localized strings for the OK, CONFIRM, and CANCEL buttons\r\n\t\t * @param {string} name - The key used to identify the new locale in the locales array\r\n\t\t * @param {Object} values - An object containing the localized string for each of the OK, CANCEL, and CONFIRM properties of a locale\r\n\t\t * @returns The updated bootbox object\r\n\t\t */\r\nfunction addLocale(name: string, values: any) {\r\n    ['OK', 'CANCEL', 'CONFIRM'].forEach((v, _) => {\r\n                if (!values[v]) {\r\n                    throw new Error(`Please supply a translation for \"${v}\"`);\r\n                }\r\n            });\r\n\r\n\tlocales[name] = {\r\n\t\tOK: values.OK,\r\n\t\tCANCEL: values.CANCEL,\r\n\t\tCONFIRM: values.CONFIRM\r\n\t};\r\n};\r\n\r\n/**\r\n\t\t* Remove a previously-registered locale\r\n\t\t* @param {string} name - The key identifying the locale to remove\r\n\t\t* @returns The updated bootbox object\r\n\t\t*/\r\nfunction removeLocale (name: string) {\r\n\tif (name !== 'en') {\r\n\t\tdelete locales[name];\r\n\t} else {\r\n\t\tthrow new Error('\"en\" is used as the default and fallback locale and cannot be removed.');\r\n\t}\r\n};\r\n\r\n/**\r\n\t\t * Set the default locale\r\n\t\t * @param {string} name - The key identifying the locale to set as the default locale for all future bootbox calls\r\n\t\t * @returns The updated bootbox object\r\n\t\t */\r\nfunction setLocale (name:string) {\r\n    if (name) {\r\n        name = name.replace('-', '');\r\n    }\r\n\r\n\treturn setDefaults('locale', name);\r\n};\r\n\r\n\r\n/**\r\n * Override default value(s) of Bootbox.\r\n * @returns The updated bootbox object\r\n */\r\nfunction setDefaults(...args: any[]) {\r\n\tlet values = {} as any[];\r\n\r\n\tif (args.length === 2) {\r\n\t\t// Allow passing of single key/value...\r\n\t\tvalues[args[0]] = args[1];\r\n\t} else {\r\n\t\t// ... and as an object too\r\n\t\tvalues = args[0];\r\n\t}\r\n\r\n\tObject.assign(defaults, values);\r\n};\r\n\r\n\r\n/**\r\n * Hides all currently active Bootbox modals\r\n * @returns The current bootbox object\r\n */\r\nfunction hideAll(): void {\r\n\tdocument.querySelectorAll<HTMLElement>('.bootbox').forEach(box => {\r\n\t\tconst modalInstance = bootstrap.Modal.getInstance(box);\r\n\t\tif (modalInstance) {\r\n\t\t\tmodalInstance.hide();\r\n\t\t}\r\n\t});\r\n};\r\n\r\n\r\n/**\r\n * Allows the base init() function to be overridden\r\n * @param {function} _$ - A function to be called when the bootbox instance is created\r\n * @returns The current bootbox object\r\n */\r\nfunction initFn(_$:any): any {\r\n\treturn initFn(_$ || bootstrap);\r\n}\r\n\r\n// CORE HELPER FUNCTIONS\r\n// *************************************************************************************************************\r\n\r\n/**\r\n * The core dialog helper function, which can be used to create any custom Bootstrap modal. \r\n * @param {Object} options - An object used to configure the various properties which define a Bootbox dialog\r\n * @returns an object upon which Bootstrap's modal function has been called\r\n */\r\nfunction dialog (options: Options) {\r\n    if (bootstrap.Modal === undefined) {\r\n        throw new Error(\r\n            '\"bootstrap.Modal\" is not defined; please double check you have included the Bootstrap JavaScript library. See https://getbootstrap.com/docs/5.3/getting-started/introduction/ for more details.'\r\n        );\r\n    }\r\n\r\n    options = sanitize(options);\r\n\r\n    let dialog = generateElement(templates.dialog);\r\n    let innerDialog = dialog.querySelector<HTMLElement>('.modal-dialog')!;\r\n    let body = dialog.querySelector<HTMLElement>('.modal-body')!;\r\n    let header = generateElement(templates.header);\r\n    let footer = generateElement(templates.footer);\r\n    let buttons = options.buttons;\r\n\r\n    if (options.messageForm)\r\n    {\r\n        body.querySelector<HTMLElement>('.bootbox-body')!.append(options.messageForm);\r\n    }\r\n    else\r\n    {\r\n        if (typeof options.message === 'string') {\r\n            body.querySelector<HTMLElement>('.bootbox-body')!.innerHTML = options.message;\r\n        } else {\r\n            body.querySelector<HTMLElement>('.bootbox-body')!.append(options.message!);\r\n        }\r\n    }\r\n\r\n    let callbacks: Callback = {};\r\n    \r\n    if (typeof options.onEscape === 'function') {\r\n         callbacks['onEscape'] = options.onEscape;\r\n    }   \r\n\r\n\r\n    // Only attempt to create buttons if at least one has been defined in the options object\r\n    if (getKeyLength(options.buttons) > 0) {\r\n\r\n        for (const [key, b] of Object.entries(buttons!)) {\r\n            let button = generateElement(templates.button) as HTMLButtonElement;\r\n            button.dataset.bbHandler = key;\r\n\r\n            var classNames = b.className.split(' ');\r\n            classNames.forEach((name: string) => { button.classList.add(name); });\r\n\r\n            switch (key) {\r\n                case 'ok':\r\n                case 'confirm':\r\n                    button.classList.add('bootbox-accept');\r\n                    break;\r\n\r\n                case 'cancel':\r\n                    button.classList.add('bootbox-cancel');\r\n                    break;\r\n            }\r\n\r\n            button.innerHTML = b.label;\r\n\r\n            if (b.id) {\r\n                button.setAttribute('id', b.id);\r\n            }\r\n\r\n            if (b.disabled === true) {\r\n                button.disabled = true;\r\n            }\r\n\r\n            footer.append(button);\r\n             \r\n            if (typeof b.callback === 'function') {\r\n                callbacks[key] = b.callback;\r\n            }\r\n        }\r\n\r\n        body.after(footer);\r\n    }\r\n\r\n    if (options.animate === true) {\r\n        dialog.classList.add('fade');\r\n    }\r\n\r\n    if (options.className) {\r\n        options.className.split(' ').forEach((name: string) => { dialog.classList.add(name); });\r\n    }\r\n\r\n    if (options.id) {\r\n        dialog.setAttribute('id',options.id);\r\n    }\r\n\r\n    if (options.size) {\r\n        switch (options.size) {\r\n            case 'small':\r\n            case 'sm':\r\n                innerDialog.classList.add('modal-sm');\r\n                break;\r\n\r\n            case 'large':\r\n            case 'lg':\r\n                innerDialog.classList.add('modal-lg');\r\n                break;\r\n\r\n            case 'extra-large':\r\n            case 'xl':\r\n                innerDialog.classList.add('modal-xl');\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (options.scrollable) {\r\n        innerDialog.classList.add('modal-dialog-scrollable');\r\n    }\r\n\r\n    if (options.title || options.closeButton) {\r\n        if (options.title) {\r\n            header.querySelector<HTMLElement>('.modal-title')!.innerHTML = options.title;\r\n        } else {\r\n            header.classList.add('border-0');\r\n        }\r\n\r\n        if (options.closeButton) {\r\n            let closeButton = generateElement(templates.closeButton);\r\n           header.append(closeButton);\r\n        }\r\n\r\n        body.before(header);\r\n    }\r\n\r\n    if (options.centerVertical) {\r\n        innerDialog.classList.add('modal-dialog-centered');\r\n    }\r\n\r\n    // Bootstrap event listeners; these handle extra setup & teardown required after the underlying modal has performed certain actions.\r\n\r\n    if (!options.reusable) {\r\n        // make sure we unbind any listeners once the dialog has definitively been dismissed\r\n        dialog.addEventListener('hide.bs.modal',\r\n            e => {\r\n\t            if (e.target === dialog) {\r\n\t\t            dialog.removeEventListener('escape.close.bb', () => {});\r\n\t\t            dialog.removeEventListener('click', () => {});\r\n\t            }\r\n            },\r\n            { once: true });\r\n\r\n        dialog.addEventListener('hidden.bs.modal',\r\n            e => {\r\n                if (e.target === dialog) {\r\n                    // Ensure we don't accidentally intercept hidden events triggered by children of the current dialog. \r\n\t\t            // We shouldn't need to handle this anymore, now that Bootstrap namespaces its events, but still worth doing.\r\n\t\t            dialog.remove();\r\n\t            }\r\n            },\r\n            { once: true });\r\n    }\r\n\r\n    if (options.onHide) {\r\n        if (typeof options.onHide === 'function') {\r\n            dialog.addEventListener('hide.bs.modal', options.onHide);\r\n        } else {\r\n            throw new Error('Argument supplied to \"onHide\" must be a function');\r\n        }\r\n    }\r\n\r\n    if (options.onHidden) {\r\n        if (typeof options.onHidden === 'function') {\r\n            dialog.addEventListener('hidden.bs.modal', options.onHidden);\r\n        } else {\r\n            throw new Error('Argument supplied to \"onHidden\" must be a function');\r\n        }\r\n    }\r\n\r\n    if (options.onShow) {\r\n        if (typeof options.onShow === 'function') {\r\n            addEventListener(dialog, 'show.bs.modal', options.onShow);\r\n        } else {\r\n            throw new Error('Argument supplied to \"onShow\" must be a function');\r\n        }\r\n    }\r\n\r\n    dialog.addEventListener('shown.bs.modal', focusPrimaryButton);\r\n\r\n    if (options.onShown) {\r\n        if (typeof options.onShown === 'function') {\r\n            addEventListener(dialog, 'shown.bs.modal', options.onShown);\r\n        } else {\r\n            throw new Error('Argument supplied to \"onShown\" must be a function');\r\n        }\r\n    }\r\n\r\n    // Bootbox event listeners; used to decouple some behaviours from their respective triggers\r\n\r\n    if (options.backdrop === true) {\r\n        let startedOnBody = false;\r\n\r\n        // Prevents the event from propagating to the backdrop, when something inside the dialog is clicked\r\n        addEventListener(dialog,\r\n            'mousedown',\r\n            e => {\r\n\t            e.stopPropagation();\r\n\r\n\t            startedOnBody = true;\r\n            }, '.modal-content');\r\n\r\n        // A boolean true/false according to the Bootstrap docs should show a dialog the user can dismiss by clicking on the background.\r\n        // We always only ever pass static/false to the actual $.modal function because with \"true\" we can't trap this event (the .modal-backdrop swallows it).\r\n        // However, we still want to sort-of respect true and invoke the escape mechanism instead\r\n        addEventListener(dialog, 'click.dismiss.bs.modal', e => {\r\n\t        if (startedOnBody || e.target !== e.currentTarget) {\r\n\t\t        return;\r\n\t        }\r\n\t        trigger(dialog, 'escape.close.bb');\r\n        });\r\n    }\r\n\r\n    dialog.addEventListener('escape.close.bb',\r\n        e => {\r\n\t        // The if() statement looks redundant but it isn't; without it, if we *didn't* have an onEscape handler then processCallback would automatically dismiss the dialog\r\n\t        if (callbacks.onEscape) {\r\n\t\t        processCallback(e, dialog, callbacks.onEscape);\r\n\t        }\r\n        });\r\n\r\n    dialog.addEventListener('click',\r\n        (e: any) => {\r\n            if (e.target.nodeName.toLowerCase() === 'button' && !e.target.classList.contains('disabled')) {\r\n                const callbackKey = e.target.dataset.bbHandler;\r\n\r\n                if (callbackKey !== undefined) {\r\n\r\n                    // Only process callbacks for buttons we recognize:\r\n                    processCallback(e, dialog, callbacks[callbackKey]);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    document.addEventListener('click',\r\n        (e: any) => {\r\n            if (e.target.closest('.bootbox-close-button')) {\r\n                processCallback(e, dialog, callbacks.onEscape);\r\n            }\r\n        });\r\n\r\n    dialog.addEventListener('keyup',\r\n        (e: any) => {\r\n\t        if (e.which === 27 || e.detail.which === 27) {\r\n\t\t        trigger(dialog, 'escape.close.bb');\r\n\t        }\r\n        });\r\n\r\n    /*\r\n    The remainder of this method simply deals with adding our dialog element to the DOM, augmenting it with \r\n    Bootstrap's modal functionality and then giving the resulting object back to our caller\r\n    */\r\n\r\n    if (typeof options.container === 'object') {\r\n        options.container.append(dialog);\r\n    } else {\r\n        document.querySelector(options.container!)?.append(dialog);\r\n    }\r\n\r\n    const modal = new bootstrap.Modal(dialog,\r\n        {\r\n            backdrop: options.backdrop,\r\n            keyboard: false,\r\n            //show: false\r\n        });\r\n\r\n    if (options.show) {\r\n        if (options.relatedTarget) {\r\n            modal.show(options.relatedTarget);\r\n        }\r\n        else{\r\n            modal.show();\r\n        }\r\n    }\r\n\r\n    return dialog;\r\n};\r\n\r\n/**\r\n        * Helper function to simulate the native alert() behavior. **NOTE**: This is non-blocking, so any code that must happen after the alert is dismissed should be placed within the callback function for this alert.\r\n        * @returns  An object upon which Bootstrap's modal function has been called\r\n        */\r\nfunction alert(...args: any[]) {\r\n\tconst options = mergeDialogOptions('alert', ['ok'], ['message', 'callback'], args);\r\n\r\n\tif (options.callback && typeof options.callback !== 'function') {\r\n\t\tthrow new Error('alert requires the \"callback\" property to be a function when provided');\r\n\t}\r\n\r\n\toptions.buttons!.ok.callback = options.onEscape = function () {\r\n\t\tif (typeof options.callback === 'function') {\r\n\t\t\treturn options.callback.call(this);\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\treturn dialog(options);\r\n}\r\n\r\n/**\r\n * Helper function to simulate the native confirm() behavior. **NOTE**: This is non-blocking, so any code that must happen after the confirm is dismissed should be placed within the callback function for this confirm.\r\n* @returns an object upon which Bootstrap's modal function has been called\r\n*/\r\nfunction confirm (...args: any[]) {\r\n    let options: Options;\r\n\r\n    options = mergeDialogOptions('confirm', ['cancel', 'confirm'], ['message', 'callback'], args);\r\n\r\n    // confirm specific validation; they don't make sense without a callback so make sure it's present\r\n    if (typeof options.callback !== 'function') {\r\n        throw new Error('confirm requires a callback');\r\n    }\r\n\r\n    // Overrides; undo anything the user tried to set they shouldn't have\r\n    let cancel = options.buttons!['cancel'];\r\n    let confirm = options.buttons!['confirm'];\r\n\r\n    if (!confirm)\r\n    {\r\n        options.buttons!['confirm'] = createButton('confirm', options.locale!);\r\n        confirm = options.buttons!['confirm'];\r\n    }\r\n\r\n    if (!cancel)\r\n    {\r\n        options.buttons!['cancel'] = createButton('cancel', options.locale!);\r\n        cancel = options.buttons!['cancel'];\r\n    }\r\n\r\n    cancel.callback = options.onEscape = function () {\r\n        return options.callback?.call(this, null);\r\n    };\r\n\r\n    confirm.callback = function () {\r\n        return options.callback?.call(this, true);\r\n    };\r\n\r\n    options.buttons!['cancel'] = cancel;\r\n    options.buttons!['confirm'] = confirm;\r\n   \r\n    return dialog(options);\r\n};\r\n\r\n\r\n/**\r\n * Helper function to simulate the native prompt() behavior. **NOTE**: This is non-blocking, so any code that must happen after the prompt is dismissed should be placed within the callback function for this prompt.\r\n * @returns an object upon which Bootstrap's modal function has been called\r\n */\r\nfunction prompt(...args: any[]) {\r\n\tlet options: Options;\r\n\tlet promptDialog: HTMLElement;\r\n\tlet form: HTMLElement;\r\n\tlet input: HTMLElement;\r\n\tlet shouldShow: boolean;\r\n\tlet inputOptions;\r\n\r\n\t// We have to create our form first, otherwise its value is undefined when gearing up our options.\r\n\t// @TODO this could be solved by allowing message to be a function instead...\r\n\tform = generateElement(templates.form);\r\n\r\n\t// prompt defaults are more complex than others in that users can override more defaults\r\n\toptions = mergeDialogOptions('prompt', ['cancel', 'confirm'], ['title', 'callback'], args);\r\n\r\n\tif (!options.value) {\r\n\t\toptions.value = defaults.value;\r\n\t}\r\n\r\n\tif (!options.inputType) {\r\n\t\toptions.inputType = defaults.inputType;\r\n\t}\r\n\r\n\t// Capture the user's 'show' value; we always set this to false before spawning the dialog to give us a chance to attach some handlers to it, but we need to make sure we respect a preference not to show it\r\n\tshouldShow = (options.show === undefined) ? defaults.show : options.show;\r\n\r\n\t// This is required prior to calling the dialog builder below - we need to add an event handler just before the prompt is shown\r\n\toptions.show = false;\r\n\r\n\t// Handles the 'cancel' action\r\n\tvar cancel = options.buttons!['cancel'];\r\n\r\n\tif (!cancel) {\r\n\t\toptions.buttons!['cancel'] = createButton('cancel', options.locale!);\r\n\t\tcancel = options.buttons!['cancel'];\r\n\t}\r\n\r\n\tcancel.callback = options.onEscape = function() {\r\n\t\treturn options.callback?.call(this, null);\r\n\t};\r\n\r\n\toptions.buttons!['cancel'] = cancel;\r\n\r\n\t// Prompt submitted - extract the prompt value. This requires a bit of work, given the different input types available.\r\n\tvar confirm = options.buttons!['confirm'];\r\n\r\n\tif (!confirm) {\r\n\t\toptions.buttons!['confirm'] = createButton('confirm', options.locale!);\r\n\t\tconfirm = options.buttons!['confirm'];\r\n\t}\r\n\r\n\tconfirm.callback = function() {\r\n\t\tlet value;\r\n\r\n\t\tform.classList.add('was-validated');\r\n\r\n\t\tif (options.inputType === 'checkbox') {\r\n\t\t\tconst checkedInputs =\r\n\t\t\t\tArray.from(input.querySelectorAll<HTMLInputElement>('input[type=\"checkbox\"]:checked'));\r\n\r\n\t\t\tvalue = Array.from(checkedInputs).map(e => e.value);\r\n\r\n\t\t\tif (options.required === true && checkedInputs.length === 0) {\r\n\t\t\t\t// prevents button callback from being called if no checkboxes have been checked\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else if (options.inputType === 'radio') {\r\n\t\t\tvalue = input.querySelector<HTMLInputElement>('input[type=\"radio\"]:checked')!.value;\r\n\t\t} else {\r\n\t\t\tlet el = input as HTMLInputElement;\r\n\r\n\t\t\t// this must be done every time; otherwise, input is reported invalid even if value is valid\r\n\t\t\tel.setCustomValidity('');\r\n\r\n\t\t\t// trigger built-in validation if checkValidity() function is defined\r\n\t\t\tif (el.checkValidity && !el.checkValidity()) {\r\n\t\t\t\t// If a custom error message was provided, add it now\r\n\t\t\t\tif (options.errorMessage) {\r\n\t\t\t\t\tel.setCustomValidity(options.errorMessage);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// trigger built-in validation message if reportValidity() function is defined\r\n\t\t\t\tif (el.reportValidity) {\r\n\t\t\t\t\tel.reportValidity();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// prevents button callback from being called\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tif (options.inputType === 'select' && options.multiple === true) {\r\n\t\t\t\t\tvalue = Array.from(input.querySelectorAll<HTMLInputElement>('option:checked'))\r\n\t\t\t\t\t\t.map(option => option.value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = el.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn options.callback?.call(this, value);\r\n\t};\r\n\r\n\toptions.buttons!['confirm'] = confirm;\r\n\r\n\t// prompt-specific validation\r\n\tif (!options.title) {\r\n\t\tthrow new Error('prompt requires a title');\r\n\t}\r\n\r\n\tif (typeof options.callback !== 'function') {\r\n\t\tthrow new Error('prompt requires a callback');\r\n\t}\r\n\r\n\tvar inputs = templates.inputs as any;\r\n\r\n\tif (!inputs[options.inputType]) {\r\n\t\tthrow new Error('Invalid prompt type');\r\n\t}\r\n\r\n\t// Create the input based on the supplied type\r\n\tinput = generateElement(inputs[options.inputType]);\r\n\r\n\tif (options.inputType !== 'textarea') {\r\n      input.addEventListener('keydown', function(ev: KeyboardEvent) {\r\n        if (ev.key === 'Enter') {\r\n          ev.preventDefault();\r\n          var acceptButton = promptDialog.querySelector<HTMLElement>('.bootbox-accept')!;\r\n\r\n\t\t  trigger(acceptButton, 'click');\r\n        }\r\n      });\r\n    }\r\n\r\n\tswitch (options.inputType) {\r\n\tcase 'text':\r\n\tcase 'textarea':\r\n\tcase 'email':\r\n\tcase 'password':\r\n\t\t(input as HTMLInputElement).value = options.value.toString();\r\n\r\n\t\tif (options.placeholder) {\r\n\t\t\tinput.setAttribute('placeholder', options.placeholder);\r\n\t\t}\r\n\r\n\t\tif (options.pattern) {\r\n\t\t\tinput.setAttribute('pattern', options.pattern);\r\n\t\t}\r\n\r\n\t\tif (options.maxlength) {\r\n\t\t\tinput.setAttribute('maxlength', options.maxlength.toString());\r\n\t\t}\r\n\r\n\t\tif (options.required) {\r\n\t\t\t(input as HTMLInputElement).required = true;\r\n\t\t}\r\n\r\n\t\tif (options.inputType === 'textarea') {\r\n\t\t\tif (options.rows && !isNaN(parseInt(options.rows.toString()))) {\r\n\t\t\t\tinput.setAttribute('rows', options.rows.toString());\r\n\t\t\t}\r\n\t\t}\r\n\t\tbreak;\r\n\r\n\tcase 'date':\r\n\tcase 'time':\r\n\tcase 'number':\r\n\tcase 'range':\r\n\t\t(input as HTMLInputElement).value = options.value.toString();\r\n\r\n\t\tif (options.placeholder) {\r\n\t\t\tinput.setAttribute('placeholder', options.placeholder);\r\n\t\t}\r\n\r\n\t\tif (options.pattern) {\r\n\t\t\tinput.setAttribute('pattern', options.pattern);\r\n\t\t} else {\r\n\t\t\tif (options.inputType === 'date') {\r\n\t\t\t\t// Add the ISO-8601 short date format as a fallback for browsers without native type=\"date\" support\r\n\t\t\t\tinput.setAttribute('pattern', '\\d{4}-\\d{2}-\\d{2}');\r\n\t\t\t} else if (options.inputType === 'time') {\r\n\t\t\t\t// Add an HH:MM pattern as a fallback for browsers without native type=\"time\" support\r\n\t\t\t\tinput.setAttribute('pattern', '\\d{2}:\\d{2}');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (options.required) {\r\n\t\t\t(input as HTMLInputElement).required = true;\r\n\t\t}\r\n\r\n\r\n\t\tif (options.step) {\r\n\t\t\tif (typeof options.step === 'string' && (options.step === 'any' || parseFloat(options.step) > 0)) {\r\n\t\t\t\tinput.setAttribute('step', options.step);\r\n\t\t\t} else if (typeof options.step === 'number' && (!isNaN(options.step) && options.step > 0)) {\r\n\t\t\t\tinput.setAttribute('step', options.step.toString());\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t'\"step\" must be a valid positive number or the value \"any\". See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-step for more information.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (minAndMaxAreValid(options.inputType, options.min, options.max)) {\r\n\t\t\tif (options.min !== undefined) {\r\n\t\t\t\tinput.setAttribute('min', options.min.toString());\r\n\t\t\t}\r\n\t\t\tif (options.max !== undefined) {\r\n\t\t\t\tinput.setAttribute('max', options.max.toString());\r\n\t\t\t}\r\n\t\t}\r\n\t\tbreak;\r\n\r\n\tcase 'select':\r\n\t\tvar groups: InputGroup = {};\r\n\t\tinputOptions = options.inputOptions || [];\r\n\r\n\t\tif (!Array.isArray(inputOptions)) {\r\n\t\t\tthrow new Error('Please pass an array of input options');\r\n\t\t}\r\n\r\n\t\tif (!inputOptions.length) {\r\n\t\t\tthrow new Error('prompt with \"inputType\" set to \"select\" requires at least one option');\r\n\t\t}\r\n\r\n\t\tif (options.required) {\r\n\t\t\t(input as HTMLInputElement).required = true;\r\n\t\t}\r\n\r\n\t\tif (options.multiple) {\r\n\t\t\t(input as HTMLInputElement).multiple = true;\r\n\t\t}\r\n\r\n\t\tfor (const [, option] of Object.entries(inputOptions)) {\r\n\t\t\t// Assume the element to attach to is the input...\r\n\t\t\tlet elem = input;\r\n\r\n\t\t\tif (option.value === undefined || option.text === undefined) {\r\n\t\t\t\tthrow new Error('each option needs a \"value\" property and a \"text\" property');\r\n\t\t\t}\r\n\r\n\t\t\t// ... but override that element if this option sits in a group\r\n\r\n\t\t\tif (option.group) {\r\n\r\n\t\t\t\t// Initialise group if necessary\r\n\t\t\t\tif (!groups[option.group]) {\r\n\t\t\t\t\tvar groupElement = generateElement('<optgroup />');\r\n\t\t\t\t\tgroupElement.setAttribute('label', option.group);\r\n\r\n\t\t\t\t\tgroups[option.group] = {\r\n\t\t\t\t\t\tContent: groupElement\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\telem = groups[option.group].Content;\r\n\t\t\t}\r\n\r\n\t\t\tlet o = generateElement(templates.option);\r\n\r\n\t\t\to.setAttribute('value', option.value);\r\n\t\t\to.textContent = option.text;\r\n\r\n\r\n\t\t\telem.append(o);\r\n\t\t}\r\n\r\n\t\tfor (const [_, group] of Object.entries(groups)) {\r\n\t\t\tinput.append(group.Content);\r\n\t\t}\r\n\r\n\t\t// Safe to set a select's value as per a normal input\r\n\t\t(input as HTMLInputElement).value = options.value.toString();\r\n\t\tbreak;\r\n\r\n\tcase 'checkbox':\r\n\t\tvar checkboxValues = Array.isArray(options.value) ? options.value : [options.value];\r\n\t\tinputOptions = options.inputOptions || [];\r\n\r\n\t\tif (!inputOptions.length) {\r\n\t\t\tthrow new Error('prompt with \"inputType\" set to \"checkbox\" requires at least one option');\r\n\t\t}\r\n\r\n\t\t// Checkboxes have to nest within a containing element, so they break the rules a bit and we end up re-assigning our 'input' element to this container instead\r\n\t\tinput = generateElement('<div class=\"bootbox-checkbox-list\"></div>');\r\n\r\n\t\tfor (const [_, option] of Object.entries(inputOptions)) {\r\n\t\t\tif (option.value === undefined || option.text === undefined) {\r\n\t\t\t\tthrow new Error('each option needs a \"value\" property and a \"text\" property');\r\n\t\t\t}\r\n\r\n\t\t\tlet checkbox = generateElement(templates.inputs[options.inputType]);\r\n\r\n\t\t\tcheckbox.querySelector<HTMLInputElement>('input')?.setAttribute('value', option.value);\r\n\t\t\tcheckbox.querySelector<HTMLLabelElement>('label')?.append(`\\n${option.text}`);\r\n\r\n\t\t\t// We've ensured values is an array, so we can always iterate over it\r\n\t\t\tfor (const [_, value] of Object.entries(checkboxValues)) {\r\n\t\t\t\tif (value === option.value) {\r\n\t\t\t\t\tcheckbox.querySelector<HTMLInputElement>('input')?.setAttribute('checked', 'true');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinput.append(checkbox);\r\n\t\t}\r\n\t\tbreak;\r\n\r\n\tcase 'radio':\r\n\t\t// Make sure that value is not an array (only a single radio can ever be checked)\r\n\t\tif (options.value !== undefined && Array.isArray(options.value)) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'prompt with \"inputType\" set to \"radio\" requires a single, non-array value for \"value\"');\r\n\t\t}\r\n\r\n\t\tinputOptions = options.inputOptions || [];\r\n\r\n\t\tif (!inputOptions.length) {\r\n\t\t\tthrow new Error('prompt with \"inputType\" set to \"radio\" requires at least one option');\r\n\t\t}\r\n\r\n\t\t// Radiobuttons have to nest within a containing element, so they break the rules a bit and we end up re-assigning our 'input' element to this container instead\r\n\t\tinput = generateElement('<div class=\"bootbox-radiobutton-list\"></div>');\r\n\r\n\t\t// Radiobuttons should always have an initial checked input checked in a \"group\".\r\n\t\t// If value is undefined or doesn't match an input option, select the first radiobutton\r\n\t\tvar checkFirstRadio = true;\r\n\r\n\t\tfor (const [_, option] of Object.entries(inputOptions)) {\r\n\t\t\tif (option.value === undefined || option.text === undefined) {\r\n\t\t\t\tthrow new Error('each option needs a \"value\" property and a \"text\" property');\r\n\t\t\t}\r\n\r\n\t\t\tlet radio = generateElement(templates.inputs[options.inputType]);\r\n\r\n\t\t\tradio.querySelector<HTMLInputElement>('input')?.setAttribute('value', option.value);\r\n\t\t\tradio.querySelector<HTMLLabelElement>('label')?.append(`\\n${option.text}`);\r\n\r\n\t\t\tif (options.value !== undefined) {\r\n\t\t\t\tif (option.value === options.value) {\r\n\t\t\t\t\tradio.querySelector<HTMLInputElement>('input')!.checked = true;\r\n\t\t\t\t\tcheckFirstRadio = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinput.append(radio);\r\n\t\t}\r\n\r\n\t\tif (checkFirstRadio) {\r\n\t\t\tinput.querySelector<HTMLElement>('input[type=\"radio\"]')?.setAttribute('checked', 'true');\r\n\t\t}\r\n\t\tbreak;\r\n\t}\r\n\r\n\t// Now place it in our form\r\n\tform.append(input);\r\n\r\n\tform.addEventListener('submit',\r\n\t\te => {\r\n\t\t\te.preventDefault();\r\n\t\t\t// Fix for SammyJS (or similar JS routing library) hijacking the form post.\r\n\t\t\te.stopPropagation();\r\n\r\n\t\t\tform.classList.remove('was-validated');\r\n\r\n\t\t\t// @TODO can we actually click *the* button object instead?\r\n\t\t\t// e.g. buttons.confirm.click() or similar\r\n\t\t\tpromptDialog.querySelector<HTMLElement>('.bootbox-accept')?.click();\r\n\t\t});\r\n\r\n\tif (options.message && options.message.trim() !== '') {\r\n\t\t// Add the form to whatever content the user may have added.\r\n\t\tlet message = generateElement(templates.promptMessage).innerHTML = options.message;\r\n\t\tform.prepend(message);\r\n\t\toptions.messageForm = form;\r\n\t} else {\r\n\t\toptions.messageForm = form;\r\n\t}\r\n\r\n\t// Generate the dialog\r\n\tpromptDialog = dialog(options);\r\n\r\n\t// Clear the existing handler focusing the submit button...\r\n\tpromptDialog.removeEventListener('shown.bs.modal', focusPrimaryButton);\r\n\r\n\t// ...and replace it with one focusing our input, if possible\r\n\tpromptDialog.addEventListener('shown.bs.modal',\r\n\t\t() => {\r\n\t\t\t// Need the closure here since input isn't can object otherwise\r\n\t\t\tinput.focus();\r\n\t\t});\r\n\r\n\tconst modal = new bootstrap.Modal(promptDialog);\r\n\r\n\tif (shouldShow === true) {\r\n\t\tmodal.show();\r\n\t}\r\n\r\n\treturn promptDialog;\r\n};\r\n\r\n// INTERNAL FUNCTIONS\r\n// *************************************************************************************************************\r\nfunction extend(...args: any[]): any {\r\n\t// Variables\r\n\tconst extended: CustomProperties = {};\r\n\tlet deep = false;\r\n\tlet i = 0;\r\n\tconst length = args.length;\r\n\r\n\t// Check if a deep merge\r\n\tif (Object.prototype.toString.call(args[0]) === '[object Boolean]') {\r\n\t\tdeep = args[0];\r\n\t\ti++;\r\n\t}\r\n\r\n\t// Merge the object into the extended object\r\n\tconst merge = (obj: CustomProperties): void => {\r\n\t\tfor (const prop in obj) {\r\n\t\t\tif (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n\t\t\t\t// If deep merge and property is an object, merge properties\r\n\t\t\t\tif (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n\t\t\t\t\textended[prop] = extend(true, extended[prop], obj[prop]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\textended[prop] = obj[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Loop through each object and conduct a merge\r\n\tfor (; i < length; i++) {\r\n\t\tconst obj = args[i];\r\n\t\tmerge(obj);\r\n\t}\r\n\r\n\treturn extended;\r\n}\r\n\r\n// *************************************************************************************************************\r\n\r\n// Map a flexible set of arguments into a single returned object.\r\n// If args.length is already one just return it, otherwise use the properties argument to map the unnamed args to object properties.\r\n// So in the latter case:\r\n//\r\n//    mapArguments([\"foo\", $.noop], [\"message\", \"callback\"])\r\n//  \r\n//  results in\r\n//\r\n//    { message: \"foo\", callback: $.noop }\r\n//\r\nfunction mapArguments(args: any[], properties: string[]): CustomProperties {\r\n\tconst argsLength = args.length;\r\n\tlet options: CustomProperties = {};\r\n\r\n\tif (argsLength < 1 || argsLength > 2) {\r\n\t\tthrow new Error('Invalid argument length');\r\n\t}\r\n\r\n\tif (argsLength === 2 || typeof args[0] === 'string') {\r\n\t\toptions[properties[0]] = args[0];\r\n\t\toptions[properties[1]] = args[1];\r\n\t} else {\r\n\t\toptions = args[0];\r\n\t}\r\n\r\n\treturn options;\r\n}\r\n\r\n\r\n// Merge a set of default dialog options with user supplied arguments\r\nfunction mergeArguments(\r\n    defaults: Options,\r\n    args: any,\r\n    properties: string[]\r\n): Options {\r\n    return extend(\r\n        {}, // Ensure the target is an empty, unreferenced object\r\n        defaults, // Base options object\r\n        mapArguments(args, properties) // Map array to object if necessary\r\n    );\r\n}\r\n\r\n\r\n// This entry-level method makes heavy use of composition to take a simple range of inputs and return valid options suitable for passing to bootbox.dialog\r\nfunction mergeDialogOptions(className: string, labels: string[], properties: string[], args: any) {\r\n    let locale;\r\n    if (args && args[0]) {\r\n        locale = args[0].locale || defaults.locale;\r\n        const swapButtons = args[0].swapButtonOrder || defaults.swapButtonOrder;\r\n\r\n        if (swapButtons) {\r\n            labels = labels.reverse();\r\n        }\r\n    }\r\n\r\n    // Build up a base set of dialog properties\r\n    const baseOptions : Options = {\r\n        className: `bootbox-${className}`,\r\n        buttons: createLabels(labels, locale),\r\n        show: true,\r\n        closeButton: true,\r\n        animate: true,\r\n        locale: 'en',\r\n        swapButtonOrder: false,\r\n        scrollable: false,\r\n        reusable: false,\r\n        centerVertical: false\r\n    };\r\n\r\n    // Ensure the buttons properties generated, *after* merging with user args are still valid against the supplied labels\r\n    return validateButtons(\r\n        // Merge the generated base properties with user supplied arguments\r\n        mergeArguments(\r\n            baseOptions,\r\n            args,\r\n            // If args.length > 1, properties specify how each arg maps to an object key\r\n            properties\r\n        ),\r\n        labels\r\n    );\r\n}\r\n\r\n\r\n// Checks each button object to see if key is valid. \r\n// This function will only be called by the alert, confirm, and prompt helpers. \r\nfunction validateButtons(options: Options, buttons: string[]): Options {\r\n    const allowedButtons: Record<string, boolean> = {};\r\n\r\n    for (const [_, value] of Object.entries(buttons)) {\r\n        allowedButtons[value] = true;\r\n    }\r\n\r\n    for (const [key] of Object.entries(options.buttons!)) {\r\n        if (allowedButtons[key] === undefined) {\r\n            throw new Error(`button key \"${key}\" is not allowed (options are ${buttons.join(' ')})`);\r\n        }\r\n    }\r\n\r\n    return options;\r\n}\r\n\r\n\r\n// From a given list of arguments, return a suitable object of button labels.\r\n// All this does is normalise the given labels and translate them where possible.\r\n// e.g. \"ok\", \"confirm\" -> { ok: \"OK\", cancel: \"Annuleren\" }\r\nfunction createLabels(labels: string[], locale: string) : Buttons {\r\n    const buttons: Buttons = {};\r\n\r\n    for (let i = 0, j = labels.length; i < j; i++) {\r\n        const argument = labels[i];\r\n        const key = argument.toLowerCase();\r\n        const value = argument.toUpperCase();\r\n\r\n       buttons[key] = {\r\n                    label: getText(value, locale),\r\n                    className: ''\r\n                };\r\n    }\r\n\r\n    return buttons;\r\n}\r\n\r\nfunction createButton(label: string, locale: string) : Button {\r\n\tconst button: Button = {\r\n\t\tlabel: getText(label.toUpperCase(), locale),\r\n\t\tclassName: ''\r\n\t};\r\n\r\n\treturn button;\r\n}\r\n\r\n// Get localized text from a locale. Defaults to 'en' locale if no locale provided or a non-registered locale is requested\r\nfunction getText(key: string, locale: string) : string  {\r\n    const labels = locales[locale];\r\n\r\n    return labels ? labels[key as keyof Locale] : locales.en[key as keyof Locale];\r\n}\r\n\r\n// Filter and tidy up any user supplied parameters to this dialog.\r\n// Also looks for any shorthands used and ensures that the options which are returned are all normalized properly\r\nfunction sanitize(options: Options) : Options {\r\n    let buttons;\r\n    let total;\r\n\r\n    if (!options.message && !options.messageForm) {\r\n        throw new Error('\"message\" option must not be null or an empty string.');\r\n    }\r\n\r\n    // Make sure any supplied options take precedence over defaults\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    // Make sure backdrop is either true, false, or 'static'\r\n    if (!options.backdrop) {\r\n        options.backdrop = (options.backdrop === false || options.backdrop === 0) ? false : 'static';\r\n    } else {\r\n        options.backdrop = typeof options.backdrop === 'string' && options.backdrop.toLowerCase() === 'static' ? 'static' : true;\r\n    }\r\n\r\n    // No buttons is still a valid dialog but it's cleaner to always have a buttons object to iterate over, even if it's empty\r\n    if (!options.buttons) {\r\n        options.buttons = {};\r\n    }\r\n\r\n    buttons = options.buttons;\r\n\r\n    total = getKeyLength(buttons);\r\n\r\n    let index = 0;\r\n\r\n    for (let [key, button] of Object.entries(buttons)) {\r\n        if (typeof button === 'function') {\r\n            // Short form, assume value is our callback. Since button isn't an object it isn't a reference either so re-assign it\r\n            button = buttons[key] = {\r\n                callback: button,\r\n                label: '',\r\n                className: ''\r\n            };\r\n        }\r\n\r\n        // Before any further checks, make sure button is the correct type\r\n        if (Object.prototype.toString\r\n            .call(button)\r\n            .replace(/^\\[object (.+)\\]$/, '$1')\r\n            .toLowerCase() !==\r\n            'object') {\r\n            throw new Error(`button with key \"${key}\" must be an object`);\r\n        }\r\n\r\n        if (!button.label) {\r\n            // The lack of an explicit label means we'll assume the key is good enough\r\n            button.label = key;\r\n        }\r\n\r\n        if (!button.className) {\r\n            let isPrimary = false;\r\n            if (options.swapButtonOrder) {\r\n                isPrimary = index === 0;\r\n            } else {\r\n                isPrimary = index === total - 1;\r\n            }\r\n\r\n            if (total <= 2 && isPrimary) {\r\n                // always add a primary to the main option in a one or two-button dialog\r\n                button.className = 'btn-primary';\r\n            } else {\r\n                // adding both classes allows us to target both BS3 and BS4+ without needing to check the version\r\n                button.className = 'btn-secondary';\r\n            }\r\n        }\r\n\r\n        index++;\r\n    }\r\n\r\n    return options;\r\n}\r\n\r\nfunction focusPrimaryButton(e: any) {\r\n    const button = e?.data?.dialog?.querySelector('.bootbox-accept') as HTMLElement;\r\n    if (button) {\r\n        trigger(button, 'focus');\r\n    }\r\n}\r\n\r\n// Returns a count of the properties defined on the object\r\n        function getKeyLength(obj: any) {\r\n            return Object.keys(obj).length;\r\n        }\r\n\r\n\r\n//  Handle the invoked dialog callback\r\nfunction processCallback(e: Event,\r\n\tdialog: HTMLElement | null,\r\n\tcallback?: (e: Event) => boolean | void) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    // By default we assume a callback will get rid of the dialog, although it is given the opportunity to override this\r\n    // If the callback can be invoked and it *explicitly returns false*, then we'll set a flag to keep the dialog active...\r\n    const preserveDialog = typeof callback === 'function' && callback.call(dialog, e) === false;\r\n\r\n    // ... otherwise we'll bin it\r\n    if (!preserveDialog && dialog) {\r\n        bootstrap.Modal.getInstance(dialog)?.hide();\r\n    }\r\n}\r\n\r\n// Validate `min` and `max` values based on the current `inputType` value\r\nfunction minAndMaxAreValid(\r\n\ttype: string,\r\n\tmin?: string | number,\r\n\tmax?: string | number\r\n): boolean {\r\n\tlet result = false;\r\n\tlet minValid = true;\r\n\tlet maxValid = true;\r\n\r\n\tif (type === 'date') {\r\n\t\tif (min !== undefined && !(minValid = dateIsValid(min as string))) {\r\n\t\t\tconsole.warn('Invalid \"min\" date format for input type \"date\".');\r\n\t\t} else if (max !== undefined && !(maxValid = dateIsValid(max as string))) {\r\n\t\t\tconsole.warn('Invalid \"max\" date format for input type \"date\".');\r\n\t\t}\r\n\t} else if (type === 'time') {\r\n\t\tif (min !== undefined && !(minValid = timeIsValid(min as string))) {\r\n\t\t\tthrow new Error('\"min\" is not a valid time.');\r\n\t\t} else if (max !== undefined && !(maxValid = timeIsValid(max as string))) {\r\n\t\t\tthrow new Error('\"max\" is not a valid time.');\r\n\t\t}\r\n\t} else {\r\n\t\tif (min !== undefined && isNaN(Number(min))) {\r\n\t\t\tminValid = false;\r\n\t\t\tthrow new Error('\"min\" must be a valid number.');\r\n\t\t}\r\n\r\n\t\tif (max !== undefined && isNaN(Number(max))) {\r\n\t\t\tmaxValid = false;\r\n\t\t\tthrow new Error('\"max\" must be a valid number.');\r\n\t\t}\r\n\t}\r\n\r\n\tif (minValid && maxValid) {\r\n        if (typeof min === 'number' && typeof max === 'number' && max < min) {\r\n\t\t\tthrow new Error('\"max\" must be greater than or equal to \"min\".');    \r\n\t\t}\r\n        else if (typeof min === 'string' && typeof max === 'string' && max < min) {\r\n\t\t\tthrow new Error('\"max\" must be greater than or equal to \"min\".');    \r\n\t\t}  else {\r\n\t\t\tresult = true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\n// helper Class\r\nfunction generateElement(html: string): HTMLElement {\r\n\tconst template = document.createElement('template');\r\n\ttemplate.innerHTML = html.trim();\r\n\treturn template.content.children[0] as HTMLElement;\r\n}\r\nfunction addEventListener(el: HTMLElement, eventName: string, eventHandler: (this: HTMLElement, e: Event) => void, selector?: string): (e: Event) => void {\r\n\tif (selector) {\r\n\t\tconst wrappedHandler = (e: Event) => {\r\n\t\t\tif (!e.target) return;\r\n\t\t\tconst targetEl = (e.target as HTMLElement).closest(selector) as HTMLElement;\r\n\t\t\tif (targetEl) {\r\n\t\t\t\teventHandler.call(targetEl, e);\r\n\t\t\t}\r\n\t\t};\r\n\t\tel.addEventListener(eventName, wrappedHandler);\r\n\t\treturn wrappedHandler;\r\n\t} else {\r\n\t\tconst wrappedHandler = (e: Event) => {\r\n\t\t\teventHandler.call(el, e);\r\n\t\t};\r\n\t\tel.addEventListener(eventName, wrappedHandler);\r\n\t\treturn wrappedHandler;\r\n\t}\r\n}\r\n\r\nexport {\r\n\tVERSION,\r\n\tgetLocale,\r\n\taddLocale,\r\n\tremoveLocale,\r\n\tsetLocale,\r\n\tsetDefaults,\r\n    hideAll,\r\n    dialog,\r\n    alert,\r\n    confirm,\r\n\tprompt,\r\n\tinitFn as init\r\n};"],"names":["ar","az","bgBG","cs","da","de","el","en","es","et","eu","fa","fi","fr","he","hr","hu","id","it","ja","ka","ko","lt","lv","nl","no","pl","pt","ptBR","ru","sk","sl","sq","sv","sw","ta","th","tr","uk","vi","zhCN","zhTW","DEFAULT_VERSION","DEFAULT_LOCALES","DEFAULT_TEMPLATES","DEFAULT_OPTIONS","timeIsValid","value","dateIsValid","trigger","eventType","event","VERSION","locales","templates","defaults","getLocale","languageCode","addLocale","name","values","v","_","removeLocale","setLocale","setDefaults","args","hideAll","box","modalInstance","bootstrap","initFn","_$","dialog","options","sanitize","generateElement","innerDialog","body","header","footer","buttons","callbacks","getKeyLength","key","b","button","classNames","closeButton","e","addEventListener","focusPrimaryButton","startedOnBody","processCallback","callbackKey","modal","alert","mergeDialogOptions","confirm","cancel","createButton","prompt","promptDialog","form","input","shouldShow","inputOptions","checkedInputs","option","inputs","ev","acceptButton","minAndMaxAreValid","groups","elem","groupElement","o","group","checkboxValues","checkbox","checkFirstRadio","radio","message","extend","extended","deep","i","length","merge","obj","prop","mapArguments","properties","argsLength","mergeArguments","className","labels","locale","baseOptions","createLabels","validateButtons","allowedButtons","j","argument","getText","label","total","index","isPrimary","callback","type","min","max","result","minValid","maxValid","html","template","eventName","eventHandler","selector","wrappedHandler","targetEl"],"mappings":"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"}